warning: unused variable: `slot`
 --> tests/ui/subtyping.rs:5:9
  |
5 |     let slot = FieldSlot::new(&mut option);
  |         ^^^^ help: if this is intentional, prefix it with an underscore: `_slot`
  |
  = note: `#[warn(unused_variables)]` on by default

error: lifetime may not live long enough
  --> tests/ui/subtyping.rs:10:9
   |
7  |     fn prove_invariance<'long, 'short: 'long>(
   |                         -----  ------ lifetime `'short` defined here
   |                         |
   |                         lifetime `'long` defined here
...
10 |         long // Error: mismatched types
   |         ^^^^ function was supposed to return data with lifetime `'short` but it is returning data with lifetime `'long`
   |
   = help: consider adding the following bound: `'long: 'short`
   = note: requirement occurs because of the type `FieldSlot<'_, '_>`, which makes the generic argument `'_` invariant
   = note: the struct `FieldSlot<'s, 'borrow>` is invariant over the parameter `'s`
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance
