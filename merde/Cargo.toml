[package]
name = "merde"
version = "10.0.2"
edition = "2021"
authors = ["Amos Wenger <amos@bearcove.net>"]
description = "Serialize and deserialize with declarative macros"
license = "Apache-2.0 OR MIT"
readme = "README.md"
repository = "https://github.com/bearcove/merde"
keywords = ["serialization", "deserialization"]
categories = ["encoding", "parser-implementations"]

[[example]]
name = "simple"
path = "examples/simple.rs"
required-features = ["json"]

[[example]]
name = "mixed"
path = "examples/mixed.rs"
required-features = ["json"]

[[example]]
name = "into-static"
path = "examples/into-static.rs"
required-features = ["json"]

[[example]]
name = "return-deserialize"
path = "examples/return-deserialize.rs"
required-features = ["json"]

[[example]]
name = "enums"
path = "examples/enums.rs"
required-features = ["json"]

[[example]]
name = "yaml"
path = "examples/yaml.rs"
required-features = ["yaml"]

[[example]]
name = "ahash"
path = "examples/ahash.rs"
required-features = ["json", "ahash"]

[[example]]
name = "infinite-stack"
path = "examples/infinite-stack.rs"
required-features = ["json"]

[[example]]
name = "opinions"
path = "examples/opinions.rs"
required-features = ["json"]

[dependencies]
merde_core = { version = "10.0.1", path = "../merde_core", optional = true }
merde_json = { version = "10.0.1", path = "../merde_json", optional = true }
merde_yaml = { version = "10.0.1", path = "../merde_yaml", optional = true }
merde_msgpack = { version = "10.0.1", path = "../merde_msgpack", optional = true }
ahash = { version = "0.8.11", optional = true }

[features]
default = ["core"]
full = [
    "core",
    "serialize",
    "deserialize",
    "json",
    "yaml",
    "msgpack",
    "time",
    "rusqlite",
]
core = ["dep:merde_core"]
serialize = ["core"]
deserialize = ["core"]

# merde_core re-exports
serde = ["merde_core/serde"]
rusqlite = ["merde_core/rusqlite"]
time = ["merde_core/time"]

# non-core crates
json = ["dep:merde_json"]
yaml = ["dep:merde_yaml"]
msgpack = ["dep:merde_msgpack"]

# others
ahash = ["dep:ahash"]

